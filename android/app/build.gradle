plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services" // Google Services plugin
    id "com.google.firebase.crashlytics" // Firebase Crashlytics plugin
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 34
    namespace 'com.stepbydevs.fresko' // Android namespace (sostituisce "applicationId" in alcune versioni di Gradle)

    defaultConfig {
        applicationId "com.stepbydevs.fresko" // Sostituisci con il tuo applicationId
        minSdkVersion 23 // Cambiato da 21 a 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

 
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17 // Allinea con Kotlin JVM
        targetCompatibility JavaVersion.VERSION_17
    }

    // Aggiungi la configurazione JVM toolchain qui
    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17)) // Forza Java 17 per Gradle
        }
    }

    kotlinOptions {
        jvmTarget = "17" // Imposta la JVM target per Kotlin
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.10"
    implementation platform('com.google.firebase:firebase-bom:32.2.0') // Firebase BOM per dipendenze Firebase
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-crashlytics-ktx"
    implementation "com.android.support:multidex:1.0.3" // Aggiungi supporto per multidex se necessario
}